@model List<MenuItem>;

@{
    ViewData["Title"] = "Admin - Menu";
}

<div class="admin-background">
    <div class="admin-container">
        <div class="admin-toolbar">
            <input type="text" class="form-control search-bar toolbar-item" placeholder="Search" id="searchInput">
            <select class="form-select dropdown-form toolbar-item" id="categorySelect">
                <option value="" disabled selected hidden>Select Category</option>
                <option value="All">All</option>
                <option value="Appetizer">Appetizer</option>
                <option value="MainCourse">Main Course</option>
                <option value="Dessert">Dessert</option>
                <option value="Cocktail">Drink</option>
            </select>
            <button class="btn btn-info admin-add-btn">Add New Item</button>
        </div>
        <div class="menu-list-container">
            <ul class="list-container" id="menuList">
                @foreach (var item in Model)
                {
                    <li class="list-item" data-category="@GetCategory(item)">
                        <div class="menu-list-item-wrapper">
                            <p class="menu-list-item-title">@item.Name</p>
                            <button class="btn btn-warning admin-edit-btn">Edit</button>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>

<script>
    document.getElementById('searchInput').addEventListener('input', filterMenu);
    document.getElementById('categorySelect').addEventListener('change', filterMenu);

    function filterMenu() {
        var filter = document.getElementById('searchInput').value.toLowerCase();
        var category = document.getElementById('categorySelect').value;
        var menuList = document.getElementById('menuList');
        var items = menuList.getElementsByClassName('list-item');

        Array.from(items).forEach(function (item) {
            var title = item.getElementsByClassName('menu-list-item-title')[0].textContent.toLowerCase();
            var itemCategory = item.getAttribute('data-category');

            if ((title.includes(filter) || filter === '') && (category === 'All' || itemCategory === category || category === '')) {
                item.style.display = '';
            } else {
                item.style.display = 'none';
            }
        });
    }
</script>

@functions {
    private string GetCategory(MenuItem item)
    {
        if (item.IsAppetizer) return "Appetizer";
        if (item.IsMainCourse) return "MainCourse";
        if (item.IsDesert) return "Dessert";
        if (item.IsCocktail) return "Cocktail";
        return string.Empty;
    }
}
